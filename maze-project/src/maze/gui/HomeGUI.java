package maze.gui;
/**
 * HomeGUI.java - this class represents a GUI for the home window of the game using SWING framework.
 * Note that the code is automaticly generated by the form editor of Netbeans
 * @author André Freitas, Vasco Gonçalves
 * @version 1.0
 */
public class HomeGUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    /**
     * Class constructor that setups all the components.
     */
    public HomeGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MazeGame FEUP");
        setForeground(java.awt.Color.white);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/startButton.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 220, 60));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mazeBuilderButton.png"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(230, 62));
        jButton2.setMinimumSize(new java.awt.Dimension(230, 62));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 220, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/MazeGameHome.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Calls the MazeInteractiveBuilder GUI when the button "Build My Own Maze and Play" is pressed
     * @param evt the action event
     * @see MazeInteractiveBuilder
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       this.setVisible(false);
       MazeInteractiveBuilder.run();
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Calls the Game Options GUI interface when the button "Play Now" is pressed
     * @param evt 
     * @see HomeOptionsGUI
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed

        HomeOptionsGUI optionsGui = new HomeOptionsGUI();
        this.setVisible(false);
        HomeOptionsGUI.showGui();

    }// GEN-LAST:event_jButton1ActionPerformed

    /** In spite the main isn't called in the project, is useful for debugging.
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        // <editor-fold defaultstate="collapsed"
        // desc=" Look and feel setting code (optional) ">
		/*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase
         * /tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {

            java.util.logging.Logger.getLogger(HomeGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {

            java.util.logging.Logger.getLogger(HomeGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeGUI.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }



        // </editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new HomeGUI().setVisible(true);
            }
        });
    }
    /**
     * Shows this window by setting the jframe as visible.
     */
    public static void showGui() {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new HomeGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
